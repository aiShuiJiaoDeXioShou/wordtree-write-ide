<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>My Document Website</title>
    <link rel="stylesheet" href="./bulma.css">
    <script src="./vue.js"></script>
    <style>
        :root {
            --bg-color: #ffff;
            --color: black;
            --menu-color: #fafafa;
        }

        /* 隐藏滚动条 */
        ::-webkit-scrollbar {
            display: none;
        }

        /* 自定义滚动条轨道 */
        ::-webkit-scrollbar-track {
            background-color: #f5f5f5;
        }

        /* 自定义滚动条滑块 */
        ::-webkit-scrollbar-thumb {
            background-color: #888;
            border-radius: 10px;
        }

        /* 鼠标悬停时的滑块样式 */
        ::-webkit-scrollbar-thumb:hover {
            background-color: #555;
        }

        body {
            background-color: var(--bg-color);
            color: var(--color);
            min-height: 100vh;
        }
        img {
            max-width: 100%;
            height: auto;
        }
        .container img {
            max-width: 100%;
            height: auto;
        }
        .cur {
            cursor: pointer;
        }
        .menu-label {
            transition: all .5s;
        }
        .toggle-dark {
            position: absolute;
            top: 1vh;
            right: 2vw;
        }
        .primary {
            color: var(--color);
        }
        .menus {
            background-color: var(--menu-color);
            height: 100vh;
        }
        .content_txt {
            height: 100vh;
            overflow: scroll;
        }
        .primary-color {
            color: #00c7a9 !important;
        }
    </style>
</head>
<body>
<div id="app" class="columns">
    <aside class="column is-2 menus">
        <div class="container">
            <p class="menu-label">
                书籍名称：[{{.Name}}]
            </p>
            <img src="https://img.zcool.cn/community/0198c45cbcc0dca801214168264eae.jpg@2o.jpg" alt="Book Cover">
            <p class="menu-label">
                作者名称：[{{.Author}}]
            </p>
        </div>
        <ul class="menu-list">
            <li><a class="nav-link" :class="{ 'is-active': active === '人物设定', 'primary-color': theme === 'dark' }" @click="setActive('人物设定')">人物设定</a></li>
            <li><a class="nav-link" :class="{ 'is-active': active === '大纲', 'primary-color': theme === 'dark' }" @click="setActive('大纲')">大纲</a></li>
            <li><a class="nav-link" :class="{ 'is-active': active === '个人中心', 'primary-color': theme === 'dark' }" @click="setActive('个人中心')">个人中心</a></li>
        </ul>
        <div v-for="chapter in book.Chapters">
            <div v-if="chapter.IsPackage">
                <p class="menu-label cur" @click="toggleSection(chapter.Name)" v-text="chapter.Name"></p>
                <ul class="menu-list">
                    <li v-for="cc in chapter.Chapters"><a class="nav-link" :class="{ 'is-active': active === cc,'primary-color': theme === 'dark' }" @click="setActive(cc)" v-text="cc.Name"></a></li>
                </ul>
            </div>
            <div  v-if="!chapter.IsPackage">
                <ul class="menu-list">
                    <li><a class="nav-link" :class="{ 'is-active': active === chapter, 'primary-color': theme === 'dark' }" @click="setActive(chapter)" v-text="chapter.Name"></a></li>
                </ul>
            </div>
        </div>
    </aside>
    <div class="column">
        <section class="section">
            <div class="container">
                <h1 class="title primary" v-text="active.Name?active.Name:''"></h1>
                <h1 class="author primary" v-text="book.Author?book.Author:''"></h1>
                <p class="subtitle primary content_txt" v-html="active.Content?format(active.Content):''"></p>
            </div>
        </section>
    </div>
    <div class="buttons has-addons toggle-dark">
        <button class="button" @click="toggleTheme('light')" :class="{ 'is-info': theme === 'light', 'is-selected': theme === 'light' }">Light</button>
        <button class="button" @click="toggleTheme('dark')" :class="{ 'is-info': theme === 'dark', 'is-selected': theme === 'dark' }">Dark</button>
    </div>
</div>
<script>
    const app = new Vue({
        el: '#app',
        data: {
            active: {},
            book: {},
            theme: 'light'
        },
        methods: {
            setActive(index) {
                this.active = index;
            },
            toggleTheme(theme) {
                this.theme = theme
                if(this.theme === 'dark') {
                    this.setDark()
                } else {
                    this.setLight()
                }
            },
            color(key,color) {
                document.documentElement.style.setProperty(key, color);
            },
            setDark() {
                this.color('--bg-color', '#212529')
                this.color('--color', '#ffff')
                this.color('--menu-color', '#343a40')
            },
            setLight() {
                this.color('--bg-color', '#ffff')
                this.color('--color', 'black')
                this.color('--menu-color', '#fafafa')
            },
            format(txt) {
                let content = ""
                let tArr = txt.split("\n")
                tArr.forEach(t=> {
                    content += `<div style="text-indent: 2rem;">${t}</div></br>`
                })
                return content
            }
        },
        mounted() {
            let book = {{.}}
            this.book = book
        }
    });
</script>
</body>
</html>

