plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.runtime' version '1.12.5'
    id 'org.jetbrains.kotlin.jvm' version '1.8.10'
}
ext {
    junitVersion = '5.9.1'
    objectboxVersion = "3.5.1"
}

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    implementation project(':wt-def')
    implementation project(':wt-ui')
    implementation project(':wt-comm')
    implementation('com.dlsc.formsfx:formsfx-core:11.5.0') {
        exclude(group: 'org.openjfx')
    }
    // 文本编辑器组件
    implementation('org.fxmisc.richtext:richtextfx:0.11.0')
    implementation('io.reactivex.rxjava3:rxjava:3.1.6')
    // json解析
    implementation('com.alibaba.fastjson2:fastjson2-adapter:2.0.22')
    // 使用sqlite数据库要用到的
    implementation('org.xerial:sqlite-jdbc:3.34.0')
    implementation('org.jfxtras:jmetro:11.6.14')
    implementation('cn.hutool:hutool-cron:5.7.10')
    // java监听鼠标键盘事件库
    implementation('net.java.dev.jna:jna-platform:5.12.1')
    implementation('net.java.dev.jna:jna:5.12.1')
    // 删除到回收站操作
    implementation('net.java.dev.jna:jna-platform:4.0.0')
    implementation("org.ktorm:ktorm-core:3.6.0")
    // 空判断
    implementation('org.jetbrains:annotations:20.1.0')
    // 引入工具箱
    implementation('cn.hutool:hutool-all:5.6.3')
    // 引入日记
    implementation('org.slf4j:slf4j-log4j12:1.7.30')
    // 引入vert.x框架编写服务器应用
    implementation('io.vertx:vertx-core:4.3.4')
    // 引入md文件解析器
    implementation('com.vladsch.flexmark:flexmark-all:0.64.0')
    // 引入爬虫框架
    implementation('us.codecraft:webmagic-core:0.8.0')
    implementation('us.codecraft:webmagic-extension:0.8.0')
    // 引入制作系统托盘类库
    implementation("com.dorkbox:SystemTray:4.2.1")
    // 加载svg文件
    implementation('org.apache.xmlgraphics:batik-all:1.14')
    // 汉语相关
    implementation('com.github.stuxuhai:jpinyin:1.1.8')
    implementation('org.apache.lucene:lucene-core:8.10.1')
    implementation('org.apache.lucene:lucene-analyzers-smartcn:8.10.1')
    implementation('org.apache.lucene:lucene-queryparser:8.10.1')
    implementation("org.jsoup:jsoup:1.15.3")

    // 检测文件编码工具
    implementation("com.googlecode.juniversalchardet:juniversalchardet:1.0.3")
    // sqlite数据库框架
    implementation("org.projectlombok:lombok:1.18.26")
    // 好看的UI
    implementation 'io.github.palexdev:materialfx:11.13.9'
    // 测试框架
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

javafx {
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web']
}

application {
    mainClass = "lh.wordtree.Launcher"
    applicationName = 'wordtree'
}

test {
    useJUnitPlatform()
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        noConsole = true
    }
    jpackage {
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "src/main/resources/static/icon/icon.$imgType"]
        installerOptions += ['--resource-dir', "src/main/resources"]
        installerOptions += ['--vendor', 'Acme Corporation']

        if (currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        } else if (currentOs.linux) {
            installerOptions += ['--linux-package-name', 'library', '--linux-shortcut']
        } else if (currentOs.macOsX) {
            installerOptions += ['--mac-package-name', 'library']
        }
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
